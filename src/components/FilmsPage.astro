---
import Film from "./Film.astro";
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const films = await getCollection("films");
---

<Layout>
	<div class="films-container">
		{
			films.map((film) => {
				const fileName = film.slug.split("/")[1];
				return (
					<Film
						href={`/films/${fileName}`}
						img={film.data.previewImg as ImageMetadata}
						trailerGif={film.data.trailerGif as ImageMetadata}
						trailerVideo={`${fileName}-${film.data.trailerVideo}`}
					/>
				);
			})
		}
	</div>
</Layout>

<script is:inline data-astro-rerun>
	(function () {
		console.log("RUN");
		const containers = document.querySelectorAll(`.film`);
		console.log("containers", containers);

		containers.forEach((container) => {
			try {
				container.addEventListener("mouseenter", function () {
					const animatedImg = container.querySelector(".animated-image");
					console.log(animatedImg, container);
					animatedImg.style.opacity = "1";
				});
				container.addEventListener("mouseleave", function () {
					console.log("mouseleave");
					const animatedImg = container.querySelector(".animated-image");
					animatedImg.style.opacity = "0";
				});
				const animatedImg = container.querySelector(".animated-image");
				animatedImg.muted = true; // Ensure the video is muted
				animatedImg.autoplay = true; // Set autoplay to true
				if (animatedImg.paused) {
					animatedImg.play().catch((err) => {
						console.error(err);
					});
				}
			} catch (err) {
				console.error(err);
			}
		});
	})();
</script>

<style>
	.films-container {
		display: grid;
		grid-template-columns: repeat(3, auto);
		grid-auto-rows: max-content;
		gap: 20px;
		justify-content: space-evenly;
		@media screen and (max-width: 960px) {
			grid-template-columns: repeat(2, auto);
		}
		@media screen and (min-width: 960px) {
			padding: 0px 16px;
		}
		@media screen and (max-width: 640px) {
			gap: 16px;
		}
	}
</style>
